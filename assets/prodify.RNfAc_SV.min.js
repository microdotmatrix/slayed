var d=Object.defineProperty;var p=(u,t,i)=>t in u?d(u,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):u[t]=i;var o=(u,t,i)=>(p(u,typeof t!="symbol"?t+"":t,i),i);class h{constructor(t){o(this,"initEventListeners",()=>{this.el.addEventListener("change",this.onVariantChange),this.quantityIncrementButton&&this.quantityDecrementButton&&this.quantityPresentationInput&&(this.quantityIncrementButton.addEventListener("click",()=>{this.updateQuantity("up")}),this.quantityDecrementButton.addEventListener("click",()=>{this.updateQuantity("down")}))});o(this,"updateCurrentVariant",()=>{const i=this.getVariantData().find(a=>a.options.every((e,r)=>this.options[r]===e));this.currentVariant=i});o(this,"updateQuantity",t=>{const i=parseInt(this.quantityPresentationInput.value);t=="up"?this.quantityHiddenInput.value=this.quantityPresentationInput.value=i+1:this.quantityHiddenInput.value=this.quantityPresentationInput.value=Math.max(1,i-1)});o(this,"updateCurrentOptions",()=>{if(this.pickerType=="select"){this.options=Array.from(this.el.querySelectorAll("select"),t=>t.value);return}this.optionContainers=Array.from(this.el.querySelectorAll(this.selectors.optionContainer)),this.options=this.optionContainers.map(t=>Array.from(t.querySelectorAll("input")).find(i=>i.checked).value)});o(this,"onVariantChange",t=>{this.updateCurrentOptions(),this.updateCurrentVariant(),this.updateAddButtonDom(!0,"",!1),this.compareInputValues(),this.setOptionSelected(t.target),this.currentVariant?(this.updateURL(),this.updateVariantIdInput(),this.swapProductInfo()):this.updateAddButtonDom(!0,this.textStrings.addButtonTextUnavailable,!0)});o(this,"swapProductInfo",()=>{window[window.slayedNamespace].helpers.fetchHTML(`${this.el.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.el.dataset.section}`).then(t=>{const i=t.querySelector(this.selectors.priceContainer),a=this.el.querySelector(this.selectors.priceContainer),e=t.querySelector(this.selectors.mediaContainer),r=this.el.querySelector(this.selectors.mediaContainer),n=t.querySelector(`${this.selectors.productForm} [name="add"]`),l=this.el.querySelector(`${this.selectors.productForm} [name="add"]`);i&&a&&a.replaceWith(i),e&&r&&r.replaceWith(e),n&&l&&l.replaceWith(n)})});o(this,"getVariantData",()=>(this.variantData=this.variantData||JSON.parse(this.el.querySelector(this.selectors.variantsJson).textContent),this.variantData));this.settings={...t},this.el=document.querySelector("[data-prodify]"),this.pickerType=this.el.dataset.prodify,this.selectors={priceContainer:"[data-prodify-price-container]",mediaContainer:"[data-prodify-media-container]",variantsJson:"[data-prodify-variants-json]",optionContainer:"[data-prodify-option-container]",productForm:"[data-prodify-product-form]",quantityIncrement:"[data-prodify-quantity-increment]",quantityDecrement:"[data-prodify-quantity-decrement]",quantityPresentation:"[data-prodify-quantity-presentation]"},this.textStrings={addToCart:window.variantStrings.addToCart,unavailableVariantValueLabel:window.variantStrings.unavailable_with_option,soldOutVariantValueLabel:window.variantStrings.soldout_with_option,addButtonTextUnavailable:window.variantStrings.unavailable},this.quantityIncrementButton=this.el.querySelector(this.selectors.quantityIncrement),this.quantityDecrementButton=this.el.querySelector(this.selectors.quantityDecrement),this.quantityPresentationInput=this.el.querySelector(this.selectors.quantityPresentation),this.quantityHiddenInput=this.el.querySelector('input[name="quantity"]'),this.initEventListeners()}updateVariantIdInput(){document.querySelectorAll(this.selectors.productForm).forEach(i=>{const a=i.querySelector('input[name="id"]');a.value=this.currentVariant.id})}updateURL(){!this.currentVariant||this.el.dataset.updateUrl==="false"||window.history.replaceState({},"",`${this.el.dataset.url}?variant=${this.currentVariant.id}`)}updateAddButtonDom(t=!0,i,a=!0){const e=document.querySelector(this.selectors.productForm);if(!e)return;const r=e.querySelector('[name="add"]'),n=e.querySelector('[name="add"] > span');r&&(t?(r.setAttribute("disabled","disabled"),i&&(n.textContent=i)):(r.removeAttribute("disabled"),n.textContent=this.textStrings.addButtonTextUnavailable),a&&(t?r.classList.add("disabled"):r.classList.remove("disabled")))}setOptionSelected(t){if(this.pickerType=="select"){const i=Array.from(t.querySelectorAll("option")),a=t.value;i.forEach(e=>{e.value===a?e.setAttribute("selected","selected"):e.removeAttribute("selected")})}}compareInputValues(){const t=this.variantData.filter(a=>this.el.querySelector(":checked").value===a.option1),i=[...this.el.querySelectorAll(this.selectors.optionContainer)];i.forEach((a,e)=>{if(e===0)return;const r=[...a.querySelectorAll('input[type="radio"], option')],n=i[e-1].querySelector(":checked").value,l=t.filter(s=>s.available&&s[`option${e}`]===n).map(s=>s[`option${e+1}`]),c=t.filter(s=>s[`option${e}`]===n).map(s=>s[`option${e+1}`]);this.setInputAvailability(r,l,c)})}setInputAvailability(t,i,a){t.forEach(e=>{if(i.includes(e.getAttribute("value"))){if(this.pickerType=="select"){e.innerText=e.getAttribute("value");return}e.classList.remove("disabled")}else if(a.includes(e.getAttribute("value"))){if(this.pickerType=="select"){e.innerText=this.textStrings.soldOutVariantValueLabel.replace("[value]",e.getAttribute("value"));return}e.classList.add("disabled")}else{if(this.pickerType=="select"){e.innerText=this.textStrings.unavailableVariantValueLabel.replace("[value]",e.getAttribute("value"));return}e.classList.add("disabled")}})}}window.prodify=new h;
//# sourceMappingURL=prodify.RNfAc_SV.min.js.map
